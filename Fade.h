/******************************************************************************
	タイトル名 : フェードクラス
	ファイル名 : fade.h
	作成者     : AT-13C-284 36 深澤佑太
	作成日     : 2016/07/13
	更新日     : 
******************************************************************************/
/******************************************************************************
	インクルードガード
******************************************************************************/
#pragma once

/******************************************************************************
	インクルードファイル
******************************************************************************/
/******************************************************************************
	ライブラリのリンク
******************************************************************************/
/******************************************************************************
	マクロ定義
******************************************************************************/
/******************************************************************************
	構造体宣言
******************************************************************************/
typedef enum {
	FADE_NONE = 0,		//	フェードしてない
	FADE_IN,			//	フェードイン
	FADE_OUT,			//	フェードアウト
	FADE_MAX
}FADE;

/******************************************************************************
	クラス
******************************************************************************/
class CFade
{
public:
	CFade();			//	コンストラクタ
	~CFade();			//	デストラクタ

	void Init(void);		//	初期化関数
	void Uninit(void);		//	終了関数
	void Update(void);		//	更新関数
	void Draw(void);		//	描画関数

	static void Start(FADE fade, CMode *NextMode);		//	フェードを始める関数
	static FADE GetFadeMode(void) { return m_Fade; }	//	フェードの状態取得

private:
	static CMode *m_NextMode;	//	次のモードが入る。
	static FADE   m_Fade;		//	フェードの状態。

	LPDIRECT3DVERTEXBUFFER9 m_pVtxBuff;		//	頂点バッファ
	D3DXCOLOR m_Color;		//	色情報
	
	float     m_Alfa;		//	透過率
};

